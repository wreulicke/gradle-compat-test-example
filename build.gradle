/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

testing {
    suites {
        differentDepsTest(JvmTestSuite) {
            sources {
                java {
                    srcDirs = []
                }
            }
            targets {
                configureEach {
                    testTask.configure {
                        testClassesDirs = sourceSets.test.output.classesDirs
                        classpath += sourceSets.test.output.classesDirs
                        shouldRunAfter(tasks.named("test"))
                    }
                }
            }
        }
    }
}

dependencies {
    implementation 'com.google.protobuf:protobuf-java:3.25.6'
    differentDepsTestRuntimeOnly 'com.google.protobuf:protobuf-java:4.29.3'

    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
}

tasks.named('test') {
    finalizedBy tasks.named('jacocoTestReport')
}

tasks.named('check') {
    dependsOn(tasks.named('differentDepsTest'))
}